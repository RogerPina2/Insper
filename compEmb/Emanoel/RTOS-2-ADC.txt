===>RTOS-ADC<===

void task_adc(void){

  /* inicializa e configura adc */
  config_AFEC_pot(AFEC_POT, AFEC_POT_ID, AFEC_POT_CHANNEL, AFEC_pot_Callback);

  /* Selecina canal e inicializa conversão */
  afec_channel_enable(AFEC_POT, AFEC_POT_CHANNEL);
  afec_start_software_conversion(AFEC_POT);

  while(1){
    if(g_is_conversion_done){
      printf("%d\n", g_ul_value);
      vTaskDelay(500);

      /* Selecina canal e inicializa conversão */
      afec_channel_enable(AFEC_POT, AFEC_POT_CHANNEL);
      afec_start_software_conversion(AFEC_POT);
    }
  }
}

========================================================================================================

===> MAILBOX - QUEUE <===

    * CRIAR QUEUE (variavel global)
        QueueHandle_t xQueueTouch;

        +typedef struct {
        +  uint value;
        +} adcData;

        +QueueHandle_t xQueueADC;




========================================================================================================

===> AFEC <===
(Analog Front-End Controller)

* EXPLICAÇÃO
    Esses periféricos são responsáveis por digitalizar um valor analógico e transforma em um valor digital. 
    Os AFECs do nosso uC possui resolução de 12 bits (impacta que o valor convertido está entre 0 e 4095).

* PASSO a PASSO
    (link: https://github.com/Insper/SAME70-examples/tree/master/Perifericos-uC/AFEC-Pin)
    (img de como conectar o potenciometro)

    #define AFEC_POT AFEC1
    #define AFEC_POT_ID ID_AFEC1
    #define AFEC_POT_CHANNEL 6 // Canal do pino PC31

    # inicialização (fora do while)
        config_AFEC_pot(AFEC_POT, AFEC_POT_ID, AFEC_POT_CHANNEL, AFEC_pot_Callback);

    # iniciar a conversão
        /* Selecina canal e inicializa conversão */
        afec_channel_enable(AFEC_POT, AFEC_POT_CHANNEL);
        afec_start_software_conversion(AFEC_POT);

    # interrupção
        static void AFEC_pot_Callback(void){
            g_ul_value = afec_channel_get_value(AFEC_POT, AFEC_POT_CHANNEL);
            g_is_conversion_done = true;
        }

    # examplo

        while(1){
            if(g_is_conversion_done){
            printf("%d\n", g_ul_value);               
            delay_ms(500);                          
            
            /* Selecina canal e inicializa conversão */
            afec_channel_enable(AFEC_POT, AFEC_POT_CHANNEL);
            afec_start_software_conversion(AFEC_POT);
            }
        }

    config_afec()